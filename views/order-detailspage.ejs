<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order-details</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

  <style>
  * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  background-color: #fff;
  display: flex;
  flex-direction: column;
  min-height: 100vh; 
}
.bottom-nav {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: #0f172a;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  padding: 15px 0;
  box-shadow: 0 -4px 15px rgba(0, 0, 0, 0.2);
  border-radius: 20px 20px 0 0;
  transition: background-color 0.3s ease-in-out;
}

.nav-link {
  color: #bbb;
  text-decoration: none;
  font-size: 16px;
  font-weight: 500;
  text-align: center;
  position: relative;
  transition: color 0.3s ease, transform 0.3s ease;
}

.nav-link:hover {
  color: #fff;
  transform: translateY(-6px);
}

.nav-link.active {
  color: #007bff;
}

.nav-link::after {
  content: "";
  position: absolute;
  bottom: -5px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  height: 3px;
  background-color: #007bff;
  transition: width 0.3s ease;
}

.nav-link:hover::after {
  width: 100%;
}

.nav-link.active::after {
  width: 100%;
}

/* =========================================================== */
.content {
  flex-grow: 1; 
  display: none;
  padding-bottom: 70px; 
}

.content.active {
  display: block;
}

/* css for home page========================================================== */
.home {
  background-color: #fff;
  border-radius: 15px;
  padding: 20px;
  margin-bottom: 50px;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.home-name{
  font-size: 18px;
  font-weight: bold;
}

.status {
  font-size: 25px;
  font-weight: bold;
  color: #2ab130;
}

.time-info {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 20px;
}

.time-left .day {
  font-size: 18px;
  text-align: left;
  font-weight: bold;
}

.time-left .time {
  font-size: 22px;
  color: #888;
  font-weight: bold;
  text-align: left;
  font-weight: bold;
}

.new-orders button {
  background: linear-gradient(90deg, #e74c3c, #ff6b6b);
  color: white;
  border: none;
  padding: 8px 15px;
  border-radius: 5px;
  font-size: 15px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.new-orders button:hover {
  background: linear-gradient(90deg, #ff6b6b, #e74c3c);
}

.map-block {
  background-color: #f5f5f5;
  padding: 20px;
  border-radius: 10px;
  height: 400px;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 18px;
  color: #777;
}

/* css for new order page  */

.new-orders-content {
  background-color: #fff;
  border-radius: 15px;
  padding: 10px;
  display: none;
  margin-bottom: 50px;
}

.new-orders-content.active {
  display: flex;
  flex-direction: column;
}

.new-orders-content h2 {
  color: #0f172a;
  font-size: 28px;
  /* margin-bottom: 20px; */
  text-align: center;
  text-transform: uppercase;
  border-bottom: 2px solid #4CAF50;
  padding-bottom: 10px;
}
.order-details-box{
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
  padding: 5px;
  border-radius: 5px;
  margin-top: 20px;
}
.order-details {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.order-details .left,
.order-details .right {
  flex: 1;
}

.order-details .left {
  /* padding-right: 20px; */
  margin-top: 20px;
}

.order-details .right {
  padding-left: 20px;
  text-align: right;
}

.order-details .name {
  font-size: 18px;
  font-weight: bold;
  color: #333;
  margin-bottom: 10px;
}

.order-details .address {
  font-size: 14px;
  color: #555;
  line-height: 1.4;
  font-weight: bold;
}

.order-details .time,
.order-details .distance {
  font-size: 16px;
  font-weight: bold;
}

.order-details .time {
  margin-bottom: 10px;
}

.order-info-box {
  display: flex;
  justify-content: space-between;
  margin: 20px 0px;
}

.order-info-box div {
  width: 48%;
  padding: 10px;
  background: #f1f1f1;
  border-radius: 8px;
}

.order-info-box div span {
  display: block;
  font-size: 14px;
  color: #333;
  text-align: center;
  font-weight: bold;
}

.product-table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 20px;
  background: #f9f9f9;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.product-table th, 
.product-table td {
  padding: 12px 15px;
  text-align: left;
}

.product-table th {
  font-size: 16px;
  color: #fff;
  background: #6c757d;
  text-transform: uppercase;
}

.product-table td {
  font-size: 14px;
  color: #333;
  background: #fff;
  border-bottom: 1px solid #ddd;
}

.product-table tr:hover td {
  background: #f1f1f1;
}

.product-table td img {
  width: 50px;
  height: 50px;
  object-fit: cover;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.product-table tr:last-child td {
  border-bottom: none;
}

.order-buttons {
  display: flex;
  justify-content: space-around;
}
.order-buttons button {
  padding: 12px 25px;
  cursor: pointer;
  border-radius: 5px;
  font-size: 16px;
  font-weight: bold;
  text-transform: uppercase;
  border: none;
  transition: transform 0.2s, box-shadow 0.2s, background 0.3s;
}

.order-buttons .accept-btn {
  background: linear-gradient(90deg, #28a745, #2ab130);
  color: white;
  box-shadow: 0 4px 6px rgba(42, 177, 48, 0.3);
}

.order-buttons .accept-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 12px rgba(42, 177, 48, 0.4);
}

.order-buttons .reject-btn {
  background: linear-gradient(90deg, #e74c3c, #ff6b6b);
  color: white;
  box-shadow: 0 4px 6px rgba(231, 76, 60, 0.3);
}

.order-buttons .reject-btn:hover {
  background: linear-gradient(90deg, #ff6b6b, #e74c3c);
  transform: translateY(-3px);
  box-shadow: 0 8px 12px rgba(231, 76, 60, 0.4);
}
.no-orders-container {
    text-align: center;
    margin-top: 50px;
    padding: 20px;
  }

  .no-orders-heading {
    color: #333;
    font-size: 28px;
    margin-bottom: 10px;
  }

  .no-orders-message {
    color: #666;
    font-size: 16px;
  }
/* css for profile page=================================================================== */

.profile {
  background-color: #f4f4f9;
  padding: 10px;
  box-sizing: border-box;
  margin-bottom: 50px;
}

.profile-image {
  text-align: center;
  margin-bottom: 20px;
  
}
.profile-img {
  width: 200px;
  height: 200px;
  border-radius: 10px;
  object-fit: cover;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);  
}

.profile-info {
  margin-top: 20px;
}

.info {
  display: flex;
  justify-content: space-between; 
  align-items: center; 
  padding: 10px 0px;
}

.info h2 {
  margin: 0;
  font-size: 20px;
}

.on_off_status {
  display: flex;
  align-items: center; 
}

.on_off_status span {
  font-size: 16px;
  color: red;
  font-weight: bold;
}

.toggle-switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
}

.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 24px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 20px;
  width: 20px;
  border-radius: 50%;
  left: 4px;
  bottom: 2px;
  background-color: white;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2ab130;
}

input:checked + .slider:before {
  transform: translateX(26px);
}


.email, .phone, .user {
  font-size: 18px;
  color: #666;
  text-align: left;
  margin: 10px 0;
}

.email span, .phone span,.user span {
  font-weight: bold;
  color: #333;
}

.select-duration {
  display: flex;
  justify-content: space-between;
  margin: 20px 0;
  align-items: center;
}

.duration-select {
  flex: 1;
  text-align: left;
}

.duration-select select {
  padding: 10px;
  font-size: 14px;
  margin-top: 10px;
  border-radius: 5px;
  border: 1px solid #ddd;
}



.custom-duration {
  display: none;
}

.custom-duration label {
  display: block;
  font-size: 14px;
  color: #333;
  margin-top: 5px;
  font-weight: bold;
}

.custom-duration input {
font-size: 14px;
  /* margin-top: 5px; */
  border: none;
  background-color: transparent;
}
.form-label{
    display: flex;
}
#to-date {
  margin-left: 19px;  
}
.order-blocks {
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
}

.order-block {
    height: 130px;
  width: 48%;
  background-color: #fff;
  padding: 15px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
}

.order-block h3 {
  font-size: 13px;
  color: #333;
  /* margin-bottom: 10px; */
}

.order-count {
  font-size: 32px;
  font-weight: bold;
  margin-top: 20px;
}

.logout-btn {
  width: 100%;
  background-color: #f44336;
  color: white;
  border: none;
  padding: 12px;
  font-size: 18px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-top: 20px;
}

.logout-btn:hover {
  background-color: #e53935;
}
/* css for history page======================================================================== */
.content.history {
  margin-top: 120px; 
  padding: 10px;
  margin-bottom: 50px;
}

.history-header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background: linear-gradient(90deg, #007bff, #0056b3);
  color: #fff;
  padding: 20px 15px;
  z-index: 1000;
  text-align: center;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  border-bottom: 3px solid #0056b3;
}

.history-header h1 {
  font-size: 26px;
  font-weight: bold;
  letter-spacing: 1.5px;
  margin: 0;
}

.links {
  display: flex;
  justify-content: space-around;
  margin-top: 15px;
  gap: 15px;
}

.links button {
  background-color: transparent;
  color: white;
  border: none;
  padding: 8px 15px;
  cursor: pointer;
  font-size: 18px;
  position: relative;
  transition: color 0.3s, transform 0.2s;
}

.links button::after {
  content: "";
  position: absolute;
  left: 50%;
  bottom: 0;
  width: 0%;
  height: 3px;
  background: #fff;
  transition: all 0.3s ease-in-out;
  transform: translateX(-50%);
}

.links button:hover {
  color: #ffc107;
  transform: translateY(-2px);
}

.links button:hover::after,
.links button.active::after {
  width: 100%;
}

.links button.active {
  color: #ffc107;
  font-weight: bold;
}


.box-container {
  margin-top: 15px;
}

.box {
  border: 1px solid #ddd;
  padding: 15px;
  border-radius: 5px;
  background-color: #f9f9f9;
  margin-top: 10px;
}

.history-name{
  margin: 5px 0;
  font-weight: bold;
  font-size: 15px;
  text-align: left;
}
.map-icon{
    color: #ffc107;
}
.delivery-time{
 margin: 5px 0;
  font-size: 13px;
  text-align: left;
  color: #666;
}
.delivery-time span{
   color: black;
   font-weight: bold; 
}
table {
  width: 100%;
  margin: 10px 0;
  border-collapse: collapse;
}

table td {
  padding: 5px 10px;
  border: 1px solid #ddd;
  text-align: center;
  font-size: 13px;
  font-weight: bold;
}
table td span{
    font-size: 11px;
    color: #666;
}
.history-address {
  margin-top: 10px;
  color: #555;
  font-size: 12px;
  text-align: left;
}
/* for rejected page */
.rejected-box {
  border: 1px solid #ddd;
  padding: 15px;
  border-radius: 5px;
  background-color: #f9f9f9;
  margin-top: 10px;
}

.rejected-history-name{
  margin: 5px 0;
  font-weight: bold;
  font-size: 15px;
  text-align: left;
}
.map-icon{
    color: #ffc107;
}
.rejected-time{
 margin: 5px 0;
  font-size: 13px;
  text-align: left;
  color: #666;
}
.rejected-time span{
   color: black;
   font-weight: bold; 
}
table {
  width: 100%;
  margin: 10px 0;
  border-collapse: collapse;
}

table td {
  padding: 5px 10px;
  border: 1px solid #ddd;
  text-align: center;
  font-size: 13px;
  font-weight: bold;
}
table td span{
    font-size: 11px;
    color: #666;
}
.rejected-history-address {
  margin-top: 10px;
  color: #555;
  font-size: 12px;
  text-align: left;
}

/* css for order page=============================================================== */

.content.orders{
  padding: 10px;
  margin-bottom: 50px;
}
.new-order-box-container{
  margin-top: 15px;
}
.order-box{
  border: 1px solid #ddd;
  padding: 15px;
  border-radius: 5px;
  background-color: #f9f9f9;
  margin-top: 10px;
}
.order-name{
  margin: 5px 0;
  font-weight: bold;
  font-size: 15px;
  text-align: left;
}

.order-delivery-time{
 margin: 5px 0;
  font-size: 13px;
  text-align: left;
  color: #666;
}
.order-delivery-time span{
   color: black;
   font-weight: bold; 
}
.order-address {
  margin-top: 10px;
  color: #555;
  font-size: 12px;
  text-align: left;
}
.order-actions {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 15px;
}

.mark-as {
  font-size: 16px;
  font-weight: bold;
  color: #333;
}

.processing-btn,.outfordelivery-btn,.delivered-btn,.cancelled-btn {
  background-color: #007bff;
  color: white;
  padding: 8px 15px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
.options-container {
      margin-top: 10px;
      display: none;
    }
    .options-container h5{
      margin-bottom: 10px;
    }
    .options-container select {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    .options-container select:focus{
      border: 1px solid #007bff;
      outline: 0;
    }
    .other-message {
      display: none;
      margin-top: 10px;
    }

    .other-message textarea{
      width: 100%;
      height: 150px;
      padding: 15px 20px;
      margin-bottom: 10px;
      border-radius: 5px;
    }
    .other-message textarea:focus{
     border: 1px solid #007bff;
     outline: 0;
    }
    .submit-reason{
      background-color: #007bff; 
      color: white; 
      padding: 5px 10px; 
      font-size: 16px;
      border: none; 
      border-radius: 5px; 
      cursor: pointer; 
   }

   /* css for delivery-details page============================================ */
   .new-delivery-details {
  margin-top: 70px; 
}

.fixed-header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background: linear-gradient(90deg, #007bff, #0056b3);
  border-bottom: 3px solid #0056b3;
  color: #fff;
  padding: 10px 20px;
  z-index: 1000;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.header-back-time{
  display: flex;
  justify-content: space-between;
}
.fixed-header .new-back-icon {
  font-size: 20px;
  cursor: pointer;
}

.fixed-header .order-id {
  font-size: 20px;
  margin-left: 55px;
}

.fixed-header .delivery-time-section {
  font-size: 18px;
}

.fixed-header .delivery-time-section .time {
  font-size: 22px;
  font-weight: bold;
}

.title-section {
  background-color: #f4f4f4;
  padding: 10px;
  margin-top: 10px;
}

.title-section h1 {
  font-size: 18px;
}

.delivery-info {
  margin-top: 20px;
  padding: 10px;
}

.info-item {
  display: flex;
  align-items: center;
  margin-bottom: 20px;
}

.info-item i {
  font-size: 24px;
  margin-right: 15px;
  color: #ffc107; 
}
.delivery-name h2{
  font-size: 18px;
}
.delivery-name,.delivery-email,.delivery-mobile,.delivery-address,.delivery-payment {
  display: flex;
  flex-direction: column;
}

.delivery-email,.delivery-mobile,.delivery-address,.delivery-payment h3 {
  font-size: 10px;
  color: #333;
}

.delivery-email,.delivery-mobile,.delivery-address,.delivery-payment  p {
  font-size: 16px;
  margin-top: 5px;
}

.delivery-info .info-item:last-child {
  margin-bottom: 0;
}
.info-item:hover {
  background-color: #f9f9f9;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.order-summary{
  margin-top: 20px;
  padding: 10px;
}
.delivery-product-table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 20px;
  background: #f9f9f9;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  margin-top: 30px;
}

.delivery-product-table th, 
.delivery-product-table td {
  padding: 12px 15px;
  text-align: left;
}

.delivery-product-table th {
  font-size: 16px;
  color: #fff;
  background: #6c757d;
  text-transform: uppercase;
}

.delivery-product-table td {
  font-size: 15px;
  color: #333;
  background: #fff;
  border-bottom: 1px solid #ddd;
}

.delivery-product-table tr:hover td {
  background: #f1f1f1;
}

.delivery-product-table td img {
  width: 50px;
  height: 50px;
  object-fit: cover;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.delivery-product-table tr:last-child td {
  border-bottom: none;
}
/* General Layout */
.payment-summary {
  padding: 15px;
  margin-bottom: 50px;
}

.summary-row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
  font-size: 16px;
}

.summary-row.bold span {
  font-weight: bold;
}

.summary-row .price {
  font-weight: bold;
  font-size: 15px ;
}
.summary-row .price span{
  color: #777;
  text-decoration: line-through;
}
.summary-row .total-price{
  font-size: 18px;
  font-weight: bold;
}
.summary-row .total-price span{
  color: #777;
  text-decoration: line-through;
  font-size: 15px;
}
.summary-row.small {
  font-size: 14px;
}

.summary-row .price.green-bg {
  background-color: #a5d6a7;
  padding: 5px;
  color: #198a1f;
  border-radius: 5px;
  font-size: 12PX;
}

hr {
  margin: 20px 0;
  border: 0;
  border-top: 1px solid #ccc;
}
.call-map {
  display: flex;
  justify-content: space-around;
  position: fixed; 
  bottom: 50px;
  left: 0;
  width: 100%; 
  background-color: white; 
  padding: 10px 0;
  box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1); 
  z-index: 1000; 
}

.call-map button {
  padding: 10px 20px;
  border-radius: 5px;
  border: none;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease; 
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.call-map .call-btn {
  color: white;
  background: linear-gradient(135deg, #ffc107, #e0a800); /* Warm yellow gradient */
  border: none;
}

.call-map .map-btn {
  color: white;
  background: linear-gradient(135deg, #333, #777); 
  border: none;
}

.call-map button:focus {
  outline: none; 
}

.call-map button:hover {
  transform: translateY(-2px); 
  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
}

.call-map button:active {
  transform: translateY(1px); 
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);
}


/* Responsive Styles */
@media (max-width: 768px) {
  
  .info-item i {
    font-size: 20px;
  }

  .delivery-email,.delivery-mobile,.delivery-address,.delivery-payment h3 {
    font-size: 14px;
  }

  .delivery-email,.delivery-mobile,.delivery-address,.delivery-payment  p {
    font-size: 13px;
  }
  .new-delivery-details {
    margin-top: 100px; 
  }

}


/* Responsive Design for Mobile */
@media (max-width: 600px) {
  .profile-info {
    padding: 10px;
  }

  .profile-info h2 {
    font-size: 18px;
  }

  .select-duration {
    text-align: left;
  }

  

  .order-block {
    
    margin-bottom: 10px;
  }

  .logout-btn {
    font-size: 14px;
  }
}
/* Media Queries for Responsiveness */
@media (max-width: 768px) {
  .nav-link {
    font-size: 14px;
  }

  .home {
    padding: 15px;
  }
 

  .time {
    font-size: 20px;
  }

  .new-orders button {
    font-size: 14px;
    margin-top: 10px;
  }

  .map-block {
    height: 500px;
  }
}
.order-status-dropdown {
  padding: 8px;
  border-radius: 4px;
  border: 1px solid #ccc;
  font-size: 14px;
  background-color: #fff;
  cursor: pointer;
}

.order-status-dropdown:hover {
  border-color: #888;
}
</style>
</head>
<link
    href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
    rel="stylesheet"
/>
<body>

  <!-- Home Page Content -->
  <div class="content home">
    <div class="header">
      <div class="home-name"><%=user.name%></div>
      <% if(user.isActive=="Online"){%>
      <div class="status">Active</div>
      <% } else { %>
      <div class="status">Inactive</div>
      <% } %>
    </div>

    <div class="time-info">
      <div class="time-left">
        <p class="day">Today</p>
        <p class="time" id="loginTimeDisplay">Loading...</p>
      </div>
      <div class="new-orders">
        <button id="new-order-button">New Orders(<%=neworder.length || "0" %>)</button>
        <button id="refresh-button"><i class="ri-refresh-line"></i></button>
      </div>
    </div>

    <div id="permission-status">Requesting location access...</div>
    <div id="address">Address will appear here...</div>

    <div class="map-block" id="map">
    
    </div>
  </div>

  <!-- html for new order page -->
  <div class="content new-orders-content">
    <!-- New Order Page Content -->
    <h2>New Order</h2>
    <% if (neworder && neworder.length > 0) { %>
      <% neworder.reverse().forEach((order) => { %>  
        <div class="order-details-box">
        <div class="order-details">
          <div class="left">
            <span class="name"><%= order.Addressname|| 'Unknown User' %></span>
            <p class="address">
              <% if (order.Address) { %>
                <%=order.Address%>
              <% } else { %>
                No address available
              <% } %>
            </p>
          </div>
          <div class="right">
            <!-- Additional content can go here -->
          </div>
        </div>
    
        <!-- Order Info Boxes -->
        <div class="order-info-box">
          <div>
            <span>Order ID</span>
            <span><%= order.orderid || 'N/A' %></span>
          </div>
          <div>
            <span>Order Amount</span>
            <span>₹<%= order.TotalPrice?.toFixed(2) || '0.00' %></span>
          </div>
        </div>
    
        <!-- Product Table -->
        <table class="product-table">
          <thead>
            <tr>
              <th></th>
              <th>Product</th>
              <th>Qty</th>
              <th>Price</th>
            </tr>
          </thead>
          <tbody>
            <% if (order.Products && order.Products.length > 0) { %>
              <% order.Products.reverse().forEach((product) => { %>
                <tr>
                  <td>
                    <% if (product.product?.image && product.product.image.file && product.product.image.imageType) { %>
                      <img src="data:<%= product.product.image.imageType %>;base64,<%= product.product.image.file.toString('base64') %>" alt="<%= product.product.name || 'Product' %>">
                    <% } else { %>
                      <img src="/path/to/placeholder-image.jpg" alt="No Image Available">
                    <% } %>
                  </td>
                  <td>
                    <%= product.product?.name || 'Unknown Product' %> <br>
                    <!-- <span style="color: #666;"><%= product.product?.description || 'No description' %></span> -->
                  </td>
                  <td><%= product.quantity || 0 %> <%=product.quantitySelector%></td>
                  <td>
                    ₹<%= product.product?.price?.toFixed(2) * product.quantity || '0.00' %> <br>
                    <span style="color: #666; text-decoration: line-through;">
                      <%= product.product?.oldPrice ? product.product.oldPrice.toFixed(2) : '' %>
                    </span>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="4">No products available</td>
              </tr>
            <% } %>
          </tbody>`
        </table>
    
        <div class="order-buttons">
          <a href="/delivery/accept/<%= order._id || '' %>"><button class="accept-btn">Accept</button></a>
          <a href="/delivery/reject/<%= order._id || '' %>"><button class="reject-btn">Reject</button></a>
        </div>
        </div>
      <% }) %>
    <% } else { %>
      <!-- <h2>No New Orders</h2>
      <p>You have no new orders at the moment.</p> -->
      <div class="no-orders-container">
        <h1 class="no-orders-heading">No Active Orders</h1>
        <p class="no-orders-message">You have no new orders at the moment.</p>
      </div>
      
      
    <% } %>
    
 <!-- Orders Page Content======================================================================= -->
 <div class="content orders">
  <div class="order-box-container" id="order-box-container">
  <% if(activeOrder.lenght>0){%>
    <% activeOrder.reverse().forEach((order)=>{ %>
    <div class="order-box">
      <div class="order-container" id="order-container">
      <p class="order-name"><%= order.Addressname %></p>
      <p class="order-delivery-time">Order Time: <span>  <%= new Date(order.Date).toLocaleString('en-US', {
        year: 'numeric',
        month: 'short',
        day: '2-digit',
        hour: '2-digit',
        minute: '2-digit',
        hour12: true,
        timeZone: 'Asia/Kolkata'
      }) %></span></p>
      <table>
          <tr>
              <td> <span >Order ID:</span> <br>#<%=order.orderid%></td>
              <td><span>Order Amount: </span><br> ₹<%= order.TotalPrice.toFixed(2) %></td>
              <td><span>Payment Type: </span><br> Offline</td>
            </tr>   
            
      </table>
      <p class="order-address">
        <i class="fas fa-map-marker-alt map-icon"></i> <% if (order.Address) { %>
          <%=order.Address%>
        <% } else { %>
          No address available
        <% } %>
      </p>
      </p>
    </div>
     
    <div class="order-actions">
      <p class="mark-as">Mark As:</p>
      <select class="order-status-dropdown">
        <option value="" >Select</option>
        <option value="processing">Processing</option>
        <option value="outfordelivery">Out for Delivery</option>
        <option value="delivered">Delivered</option>
      </select>
    </div>
    </div>
    <%})}else{%>
      <h2>No Active Orders</h2>
      <p>You have no active orders at the moment.</p>
    <%}%>

</div>
</div>

<!-- delivery details====================================================== -->
<div class="delivery-details" id="delivery-details" style="display: none;">

<header class="fixed-header">
  <div class="header-back-time">
  <div class="back-icon">
    <i id="back-to-main" class="fa-solid fa-chevron-left"></i>
  </div>
 
  <div class="order-id">
    <span><strong>#OTB000145</strong></span>
  </div><br>
  <div class="delivery-time-section">
    <span>Delivery Time</span><br>
    <span class="time">09:20 AM</span>
  </div>

</div>
</header>

<!-- Delivery Details Title -->
<div class="title-section">
  <h1>Delivery Details</h1>
</div>

<!-- Delivery Information -->
<div class="delivery-info">
<div class="info-item">
  <div class="delivery-name">
    <h2>John Chambers</h2>
  </div>
</div>

<div class="info-item">
  <i class="fas fa-map-marker-alt"></i>
  <div class="delivery-address">
    <h3>Address</h3>
    <p>123 Main Street, Apartment 4B, CityMall, State 78722, United States</p>
  </div>
</div>

<div class="info-item">
  <i class="fas fa-envelope"></i>
  <div class="delivery-email">
    <h3>Email Id</h3>
    <p>johnchambers@gmail.com</p>
  </div>
</div>

<div class="info-item">
  <i class="fas fa-phone"></i>
  <div class="delivery-mobile">
    <h3>Mobile</h3>
    <p>+91 1234567890</p>
  </div>
</div>

<div class="info-item">
  <i class="fas fa-credit-card"></i>
  <div class="delivery-payment">
    <h3>Payment Type</h3>
    <p>Cash on Delivery</p>
  </div>
</div>
</div>

<div class="title-section">
<h1>Order Summary</h1>
</div>

<!-- delivery-Product Table -->
<table class="delivery-product-table">
  <thead>
    <tr>
      <th></th>
      <th>Product</th>
      <th>Qty</th>
      <th>Price</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><img src="assest/products/crops/onions.jpg" alt="Onion"></td>
      <td>Onion <br><span style="color: #666;">1kg</span></td>
      <td>2</td>
      <td>₹148 <br><span style="color: #666; text-decoration: line-through;">₹198</span></td>
    </tr>
    <tr>
      <td><img src="assest/products/crops/potatoes.jpg" alt="Corn"></td>
      <td>Potato <br><span style="color: #666;">1kg</span></td>
      <td>1</td>
      <td>₹50<br><span style="color: #666; text-decoration: line-through;">₹94</span></td>
    </tr>
    <tr>
      <td><img src="assest/products/crops/cucumber.jpg" alt="Cucumber"></td>
      <td>Cucumber <br><span style="color: #666;">1kg</span></td>
      <td>1</td>
      <td>₹31<br><span style="color: #666; text-decoration: line-through;">₹40</span></td>
    </tr>
  </tbody>
</table>

<div class="title-section">
  <h1>Bill Summary</h1>
</div>

<div class="payment-summary">
  <!-- Item Total -->
  <div class="summary-row">
    <span>Item Total</span>
    <h2 class="price"><span>₹407</span>&nbsp; ₹267</h2>
  </div>

  <!-- Handling Charge -->
  <div class="summary-row">
    <span>Handling Charge</span>
    <h2 class="price"><span>₹15</span>&nbsp;₹6.49</h2>
  </div>

  <!-- Delivery Fee -->
  <div class="summary-row">
    <span>Delivery Fee</span>
    <h2 class="price"><span>₹25</span>&nbsp;₹0</h2>
  </div>

  <!-- GST & Taxes -->
  <div class="summary-row bold">
    <span>GST & Taxes</span>
    <h2 class="price"><span>₹299</span>&nbsp;₹1</h2>
  </div>

  <hr>

  <!-- To Pay -->
  <div class="summary-row">
    <span style="font-weight: bold;">To Pay</span>
    <h2 class="total-price"><span>₹746</span>&nbsp;₹274.49</h2>
  </div>

  <!-- Taxes and Savings -->
  <div class="summary-row small">
    <span>Incl. all taxes and charges</span>
    <span class="price green-bg">SAVING ₹471.51</span>
  </div>


  <div class="call-map">
    <button class="call-btn"><i class="fa-solid fa-phone"></i> &nbsp;Call</button>
    <button class="map-btn"><i class="fa-solid fa-location-dot"></i> &nbsp;Map</button>
  </div>
</div>
</div>
</div>

  <!-- History Page Content=============================================================== -->
  <div class="content history">
    <div class="history-header">
      <h1>Order History</h1>
      <div class="links">
        <button id="delivered-btn" class="active">Delivered</button>
      <button id="rejected-btn">Cancelled</button>
      </div>
    </div>
    
    <div id="delivered-content" class="box-container">
      <!-- Box 1 -->
       <%if(orderhistory.length>0){%>

      <% orderhistory.reverse().forEach((order)=>{ %>
      <div class="box">
        <p class="history-name"><%=order.Addressname%></p>
        <p class="delivery-time">Order Time: <span>  <%= new Date(order.Date).toLocaleString('en-US', {
          year: 'numeric',
          month: 'short',
          day: '2-digit',
          hour: '2-digit',
          minute: '2-digit',
          hour12: true

        }) %></span></p>
        <table>
            <tr>
                <td> <span >Order ID:</span> <br><%=order.orderid%></td>
                <td><span>Order Amount: </span><br> ₹<%= order.TotalPrice.toFixed(2) %></td>
                <td><span>Payment Type: </span><br> Offline</td>
              </tr>
        </table>
        <p class="history-address">
              <%= order.User.address && order.User.address.length > 0 ? `${order.User.address[order.AddressIndex].address}, ${order.User.address[order.AddressIndex].locality}, ${order.User.address[0].city}, ${order.User.address[0].state} ${order.User.address[0].pincode}` : 'No address available' %>
              <i class="fas fa-map-marker-alt map-icon"></i> 
        </p>
      </div>
      <% }) }else { %>
        <p>No delivered orders found.</p>
      <% } %>
      
      
    </div>
  
    <div id="rejected-content" class="box-container" style="display: none;">
      <!-- Box 1 -->
      <% if(rejectedorder.length>0){ %>
        <% rejectedorder.reverse().forEach((order)=>{ %>
      <div class="rejected-box">
        <p class="rejected-history-name"><%=order.Addressname%></p>
        <p class="rejected-time">Delivery Time: <span> <%= new Date(order.Date).toLocaleString('en-US', {
          year: 'numeric',
          month: 'short',
          day: '2-digit',
          hour: '2-digit',
          minute: '2-digit',
          hour12: true,
          timeZone: 'Asia/Kolkata'
        }) %></span></p>
        <table>
            <tr>
                <td> <span >Order ID:</span> <br>#<%=order.orderid%></td>
                <td><span>Order Amount: </span><br>₹<%=order.TotalPrice%></td>
                <td><span>Payment Type: </span><br>Offline</td>
              </tr>
        </table>
        <p class="rejected-history-address">
          <i class="fas fa-map-marker-alt map-icon"></i> <%= order.Address ? `${order.Address}` : 'No address available' %>
        </p>
      </div>
      <% }) } else { %>
        <p>No rejected orders found.</p>
      <% } %>
    </div>
  </div>
  
  <!-- new page content -->
   <div class="content newpage">
    <div class="new-order-box-container" id="new-order-box-container">
      <!-- Box 1 -->
       <%if(activeOrder.length>0){%>
        <% activeOrder.reverse().forEach((order)=>{ %>
    <a href="/delivery/deliverydetails/<%=order._id%>" style="text-decoration: none;"> <div class="order-box">
        <div class="new-order-container" id="new-order-container">
        <p class="order-name"><%=order.Addressname%></p>
        <p class="order-delivery-time">Order Time: <span><%= new Date(order.Date).toLocaleString('en-US', {
          year: 'numeric',
          month: 'short',
          day: '2-digit',
          hour: '2-digit',
          minute: '2-digit',
          hour12: true,
          timeZone: 'Asia/Kolkata'
        }) %></span></p>
        <table>
            <tr>
                <td> <span >Order ID:</span> <br><%=order.orderid%></td>
                <td><span>Order Amount: </span><br>₹<%=order.TotalPrice%></td>
                <td><span>Payment Type: </span><br> Offline</td>
              </tr>
        </table>
        <p class="order-address">
          <i class="fas fa-map-marker-alt map-icon"></i><%= order.Address ? `${order.Address}` : 'No address available' %>
        </p>
      </div>
    </a>
      <div class="order-actions">
        <form action="/delivery/updateOrderStatus" method="POST">
          <p class="mark-as">Mark As:</p>
          <select class="order-status-dropdown" name="status" id="order-status" onchange="toggleOptionsContainer()">
            <option value="Processing" <%= order.status === "Processing" ? "selected" : "" %>>Processing</option>
            <option value="Out For Deliverey" <%= order.status === "Out For Deliverey" ? "selected" : "" %>>Out For Deliverey</option>
            <option value="Delivered" <%= order.status === "Delivered" ? "selected" : "" %>>Delivered</option>
            <option value="cancelled">Cancelled</option>
          </select>
          <input type="hidden" name="orderid" value="<%= order.orderid %>"> 
          <button type="submit">Mark As</button>
        </form>
      </div>
        <!-- Options Section -->
    <div class="options-container" id="options-container" style="display: none;">
      <h5>Reason for cancellation</h5>
      <select id="cancel-options" onchange="showOtherInput()">
        <option value="">Select a reason...</option>
        <option value="door-locked">Door Locked</option>
        <option value="customer-not-picking">Customer Not Picking Call</option>
        <option value="incorrect-address">Incorrect Address</option>
        <option value="bad-weather">Bad Weather</option>
        <option value="payment-issue">Payment Issue</option>
        <option value="item-out-of-stock">Item Out of Stock</option>
        <option value="vehicle-breakdown">Vehicle Breakdown</option>
        <option value="package-lost">Package Lost</option>
        <option value="wrong-item-placed">Wrong Item Placed</option>
        <option value="accident">Accident During Delivery</option>
        <option value="technical-issue">Technical Issue</option>
        <option value="other">Other</option>
      </select>
  
      <!-- "Other" input section -->
      <div class="other-message" id="other-message" style="display: none;">
        <h5>Mention it:</h5>
        <textarea name="message" placeholder="Type another reason..."></textarea>
      </div>
      <button type="submit" class="submit-reason">Submit</button>
    </div>
      </div>
      <% }) } else { %>
        <p>No active orders found.</p>
      <% } %>
  
    
   

 
  </div>
</div>


   </div>

  <!-- Profile Page Content -->
  <div class="content profile">
    <div class="profile-image">
      <img src="data:<%= user.profileimage.imageType %>;base64,<%= user.profileimage.file.toString('base64') %>" alt="Profile Image" class="profile-img">
    </div>
  
    <div class="profile-info">
        <div class="info">
            <h2><%=user.name%></h2>
            <div class="on_off_status" data-user-id="<%= user._id %>">
              <% if (user.isActive=="Online"){ %>
              <span id="statusText" style="color: #2ab130;"><%=user.isActive%></span>
              <%}else{%>
                <span id="statusText" style="color: red;"><%=user.isActive%></span>
              <%}%>
              &nbsp;
              <label class="toggle-switch">
                <% if(user.isActive=="Online"){%>
                <input type="checkbox" id="toggle-switch" onchange="updateStatus()" checked />
                <%}else{%>
                <input type="checkbox" id="toggle-switch" onchange="updateStatus()" />
                <%}%>
                <span class="slider"></span>
              </label>
            </div>
          </div>
          
      <p class="user">User ID:- <span><%=user.id%></span></p>
      <p class="email">Email ID:- <span><%=user.email%></span></p>
      <p class="phone">Phone no.:- <span><%=user.mobile%></span></p>
  
      <div class="select-duration">
        <!-- Select Duration on the Left -->
        <div class="duration-select">
         
          <select id="duration" name="duration">
            <option value="all">All</option>
            <option value="today">Today</option>
            <option value="week">This Week</option>
            <option value="month">This Month</option>
            <option value="custom">Select Duration</option>
          </select>
        </div>
        
        <!-- Custom Duration on the Right -->
       
          <div class="custom-duration" id="custom-duration">
            <div class="form-label">
            <label for="from-date">From</label> &nbsp;
            <input type="date" id="from-date">
        </div>
        <div class="form-label">
            <label for="to-date">To</label> &nbsp;
            <input type="date" id="to-date">
        </div>
          </div>
        </div>
      
  
      <div class="order-blocks">
        <div class="order-block total-order">
          <h3>Total Orders</h3>
          <p class="order-count"><%=orderhistory.length+rejectedorder.length%></p>
        </div>
        <div class="order-block completed-order">
          <h3>Completed Orders</h3>
          <p class="order-count"><%=orderhistory.length%></p>
        </div>
      </div>
  
     <a href="/delivery/logout"><button class="logout-btn">Log Out</button></a> 
    </div>
  </div>
  

  <!-- Bottom Navigation Bar -->
  <div class="bottom-nav">
    <a href="#home" class="nav-link" id="home-link">
        <i class="fas fa-home"></i> Home
      </a>
      <a href="#new-link-content" class="nav-link" id="new-link">
        <i class="fas fa-history"></i> Active
      </a>
      <a href="#history" class="nav-link" id="history-link">
        <i class="fas fa-history"></i> History
      </a>
      
      <a href="#profile" class="nav-link" id="profile-link">
        <i class="fas fa-user"></i> Profile
      </a>
</div>
  <script
  src="https://maps.googleapis.com/maps/api/js?key=<%=googlemapapi%>"
  async
></script>

<script>

const home = document.querySelector(".home");
const history = document.querySelector(".history");
const profile = document.querySelector(".profile");
const newpage = document.querySelector(".newpage");
const newOrderContent = document.querySelector(".new-orders-content");


const homeLink = document.getElementById("home-link");
const historyLink = document.getElementById("history-link");
const profileLink = document.getElementById("profile-link");
const newLink = document.getElementById("new-link");


function hideAllContent() {
  home.classList.remove("active");
  history.classList.remove("active");
  profile.classList.remove("active");
  newpage.classList.remove("active");

  newOrderContent.classList.remove("active");

}

// This script manages the "active" state of navigation links in the bottom nav.
document.addEventListener('DOMContentLoaded', () => {
    const navLinks = document.querySelectorAll('.bottom-nav .nav-link');

    function setActiveLink(hash) {
      navLinks.forEach(link => {
        if (link.getAttribute('href') === hash) {
          link.classList.add('active');
        } else {
          link.classList.remove('active');
        }
      });
    }

    setActiveLink(window.location.hash || '#home');

    navLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        setActiveLink(link.getAttribute('href'));
      });
    });
  });
// Show the selected section and add active class to the link
function showContent(content, link) {
  hideAllContent();
  content.classList.add("active");
}

// Set initial content to be displayed
showContent(home, homeLink);

// Add event listeners to the navigation links
homeLink.addEventListener("click", () => showContent(home, homeLink));
historyLink.addEventListener("click", () => showContent(history, historyLink));
profileLink.addEventListener("click", () => showContent(profile, profileLink));
newLink.addEventListener("click", () => showContent(newpage, newLink));

// js for new order button=================================================================================
const newOrderButton = document.getElementById('new-order-button');

// Show new order page
newOrderButton.addEventListener('click', () => {
  // Hide the home content when new order is shown
  hideAllContent();
  newOrderContent.classList.add('active');
});

// Show home content when home link is clicked
homeLink.addEventListener('click', () => {
  hideAllContent();
  home.classList.add('active');
});

// js for profile page===================================================================================
document.getElementById('duration').addEventListener('change', function() {
  var customDuration = document.getElementById('custom-duration');
  if (this.value === 'custom') {
    customDuration.style.display = 'block';
  } else {
    customDuration.style.display = 'none';
  }
});

// js for history page==================================================================================
const deliveredBtn = document.getElementById("delivered-btn");
const rejectedBtn = document.getElementById("rejected-btn");
const deliveredContent = document.getElementById("delivered-content");
const rejectedContent = document.getElementById("rejected-content");

deliveredBtn.addEventListener("click", () => {
  deliveredContent.style.display = "block";
  rejectedContent.style.display = "none";
  deliveredBtn.classList.add("active");
  rejectedBtn.classList.remove("active");
});

rejectedBtn.addEventListener("click", () => {
  deliveredContent.style.display = "none";
  rejectedContent.style.display = "block";
  rejectedBtn.classList.add("active");
  deliveredBtn.classList.remove("active");
});

// js for orders page ========================================================================
// Toggle the visibility of options when Cancelled button is clicked
function toggleOptions() {
      const optionsContainer = document.getElementById('options-container');
      optionsContainer.style.display = optionsContainer.style.display === 'block' ? 'none' : 'block';
    }

    // Show the input field if "Other" is selected from the dropdown
    function showOtherInput() {
      const selectedOption = document.getElementById('cancel-options').value;
      const otherMessage = document.getElementById('other-message');

      if (selectedOption === 'other') {
        otherMessage.style.display = 'block';
      } else {
        otherMessage.style.display = 'none';
      }
    }

    



    const statusElement = document.getElementById('permission-status');
    const addressElement = document.getElementById('address');
    const mapElement = document.getElementById('map');
    let map, marker;

    // Automatically request location on page load
    window.onload = () => {
  if ('geolocation' in navigator) {
    statusElement.textContent = 'Requesting location access...';
    
    // Watch the user's position with periodic updates
    navigator.geolocation.watchPosition(
      (position) => {
        const { latitude, longitude } = position.coords;
        statusElement.textContent = `Location permission granted.`;
        updateLocation(latitude, longitude);
        getAddressFromCoordinates(latitude, longitude);
      },
      (error) => {
        switch (error.code) {
          case error.PERMISSION_DENIED:
            statusElement.textContent = 'Location permission denied.';
            break;
          case error.POSITION_UNAVAILABLE:
            statusElement.textContent = 'Location information is unavailable.';
            break;
          case error.TIMEOUT:
            statusElement.textContent = 'Location request timed out.';
            break;
          default:
            statusElement.textContent = 'An unknown error occurred.';
            break;
        }
      },
      {
        enableHighAccuracy: true,
        maximumAge: 10000, // Cache location for 10 seconds

      }
    );

    // Refresh location every 10 seconds
    setInterval(() => {
      if ('geolocation' in navigator) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            const { latitude, longitude } = position.coords;
            updateLocation(latitude, longitude);
            getAddressFromCoordinates(latitude, longitude);
          },
          (error) => {
            console.error('Error fetching location on interval:', error);
          }
        );
      }
    }, 10000); // Refresh every 10 seconds (10,000 milliseconds)
  } else {
    statusElement.textContent = 'Geolocation is not supported by your browser.';
  }
};

function updateLocation(lat, lng) {
  // If the map is not initialized, initialize it
  if (!map) {
    map = new google.maps.Map(mapElement, {
      center: { lat, lng },
      zoom: 12,
    });

    // Initialize marker at user's location
    marker = new google.maps.Marker({
      position: { lat, lng },
      map: map,
      icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
    });
  } else {
    // Update map center and marker position
    map.setCenter({ lat, lng });
    marker.setPosition({ lat, lng });
  }
}

function getAddressFromCoordinates(lat, lng) {
  const geocodingUrl = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=<%=googlemapapi%>`;

  fetch(geocodingUrl)
    .then((response) => response.json())
    .then((data) => {
      if (data.status === 'OK' && data.results.length > 0) {
        const address = data.results[0].formatted_address;
        addressElement.textContent = `Address: ${address}`;
      } else {
        addressElement.textContent = 'Unable to fetch address.';
      }
    })
    .catch((error) => {
      console.error('Error fetching address:', error);
      addressElement.textContent = 'Error fetching address.';
    });
}
function calculateTime(orderDate) {
  const now = new Date();
  const orderTime = new Date(orderDate);
  const difference = Math.round((now - orderTime) / 60000); // Convert ms to minutes
  return difference;
}
function updateStatus() {
    const toggleSwitch = document.getElementById('toggle-switch');
    const statusText = document.getElementById('statusText');
    const onOffStatusDiv = document.querySelector('.on_off_status');
    const userId = onOffStatusDiv.getAttribute('data-user-id');
    const status = toggleSwitch.checked ? 'Online' : 'Offline';

    
    statusText.textContent = status;

   
    fetch('/delivery/update-status', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ userId, status }),
    })
      .then((response) => response.json())
      .then((data) => {
        console.log(data.message);
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  }
  function getLoginDuration() {
    // Get the token from cookies
    const token = document.cookie.split('; ').find(row => row.startsWith('tokken='));
    
    if (token) {
      const jwt = token.split('=')[1]; 
      const payload = JSON.parse(atob(jwt.split('.')[1])); // Decode JWT payload
      const loginTime = new Date(payload.iat * 1000); 
      const currentTime = new Date();

      // Calculate the difference in minutes
      const diffInMinutes = Math.floor((currentTime - loginTime) / 60000);
      const hours = Math.floor(diffInMinutes / 60);
      const minutes = diffInMinutes % 60;

      // Update the time display
      document.getElementById('loginTimeDisplay').innerText = `${hours} hours & ${minutes} minutes`;
    }
  }

  getLoginDuration(); // Run function on page load
  document.getElementById("refresh-button").addEventListener("click", function() {
        location.reload(); // Reload the tab
    });


    // js for cancellled reason==================================================================
function toggleOptionsContainer() {
    var statusSelect = document.getElementById("order-status");
    var optionsContainer = document.getElementById("options-container");

    if (statusSelect.value === "cancelled") {
      optionsContainer.style.display = "block";
    } else {
      optionsContainer.style.display = "none";
    }
  }

  function showOtherInput() {
    var cancelSelect = document.getElementById("cancel-options");
    var otherMessage = document.getElementById("other-message");

    if (cancelSelect.value === "other") {
      otherMessage.style.display = "block";
    } else {
      otherMessage.style.display = "none";
    }
  }
</script>
</body>
</html>
